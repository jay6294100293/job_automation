# Generated by Django 4.2.23 on 2025-06-27 19:08

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DeploymentEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                (
                    "repository",
                    models.CharField(default="job_automation", max_length=200),
                ),
                ("branch", models.CharField(default="main", max_length=100)),
                ("commit_sha", models.CharField(max_length=40)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("in_progress", "In Progress"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("duration", models.CharField(blank=True, max_length=50)),
                ("deployment_url", models.URLField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("raw_data", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ServerMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                ("cpu_usage", models.FloatField(default=0.0)),
                ("memory_usage", models.FloatField(default=0.0)),
                ("disk_usage", models.FloatField(default=0.0)),
                ("load_average", models.CharField(blank=True, max_length=50)),
                ("uptime", models.CharField(blank=True, max_length=50)),
                ("containers_running", models.IntegerField(default=0)),
                ("containers_total", models.IntegerField(default=0)),
                (
                    "overall_health",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                        ],
                        default="healthy",
                        max_length=20,
                    ),
                ),
                ("raw_data", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TestEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                ("total_tests", models.IntegerField(default=0)),
                ("passed", models.IntegerField(default=0)),
                ("failed", models.IntegerField(default=0)),
                ("skipped", models.IntegerField(default=0)),
                ("pass_rate", models.FloatField(default=0.0)),
                ("coverage", models.FloatField(blank=True, null=True)),
                ("duration", models.CharField(blank=True, max_length=50)),
                (
                    "health_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("unhealthy", "Unhealthy"),
                        ],
                        default="healthy",
                        max_length=20,
                    ),
                ),
                ("raw_data", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
    ]
